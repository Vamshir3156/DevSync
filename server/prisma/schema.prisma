
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String
  passwordHash String
  createdAt    DateTime  @default(now())
  projects     Project[] @relation("OwnerProjects")
  memberships  Member[]
  messages     Message[]
  tasks        Task[]    @relation("TaskAssignee")
}

model Project {
  id          String    @id @default(cuid())
  name        String
  description String?
  ownerId     String
  owner       User      @relation("OwnerProjects", fields: [ownerId], references: [id])
  members     Member[]
  tasks       Task[]
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Member {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  role      String   @default("MEMBER")
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}

model Task {
  id          String   @id @default(cuid())
  projectId   String
  title       String
  description String?
  status      String   @default("todo") // todo | in_progress | done
  order       Int      @default(0)
  assigneeId  String?
  assignee    User?    @relation("TaskAssignee", fields: [assigneeId], references: [id])
  project     Project  @relation(fields: [projectId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  projectId String
  senderId  String
  content   String
  createdAt DateTime @default(now())

  project   Project  @relation(fields: [projectId], references: [id])
  sender    User     @relation(fields: [senderId], references: [id])
}
